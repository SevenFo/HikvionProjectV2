cmake_minimum_required(VERSION 3.8)
project(PPDETV_BASE CXX C)


include(cmake/yaml-cpp.cmake)

SET(PADDLE_DIR D:\\programs\\PP\\paddle_inference)
SET(PADDLE_LIB_NAME "libpaddle_inference")
SET(OPENCV_DIR D:\\programs\\PP\\opencv)
SET(CUDA_LIB C:\\Program\ Files\\NVIDIA\ GPU\ Computing\ Toolkit\\CUDA\\v10.1\\lib\\x64 )
SET(CUDNN_LIB C:\\Program\ Files\\NVIDIA\ GPU\ Computing\ Toolkit\\CUDA\\v10.1\\cudnn-7.6.5.32\\lib\\x64)
SET(TENSORRT_INC_DIR C:\\Program\ Files\\NVIDIA\ GPU\ Computing\ Toolkit\\CUDA\\v10.1\\TensorRT-6.0.1.5\\include)
SET(TENSORRT_LIB_DIR C:\\Program\ Files\\NVIDIA\ GPU\ Computing\ Toolkit\\CUDA\\v10.1\\TensorRT-6.0.1.5\\lib)

SET(SRCS 
        ppdet_base.cpp
	utils
	preprocess_op
	picodet_postprocess
	object_detector
)

message("++++++++++",${CMAKE_BINARY_DIR})

link_directories(
	"${PADDLE_DIR}/paddle/lib",
	"${CMAKE_BINARY_DIR}/ext/yaml-cpp/lib"
	"${OPENCV_DIR}/build/x64/vc15/lib"
	"${PADDLE_DIR}/third_party/install/glog/lib"
	"${PADDLE_DIR}/third_party/install/protobuf/lib"
)
link_directories("${PADDLE_DIR}/third_party/install/gflags/lib")
link_directories("${PADDLE_DIR}/third_party/install/xxhash/lib")
link_directories("${CMAKE_CURRENT_BINARY_DIR}")

include_directories(
	"./",
	"${PADDLE_DIR}/paddle/include",
	"${CMAKE_BINARY_DIR}/ext/yaml-cpp/src/ext-yaml-cpp/include",
	"${OPENCV_DIR}/build/include",
	"${PADDLE_DIR}/third_party/install/glog/include"
)
macro(safe_set_static_flag)
    foreach(flag_var
        CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
        CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
      if(${flag_var} MATCHES "/MD")
        string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
      endif(${flag_var} MATCHES "/MD")
    endforeach(flag_var)
endmacro()

add_definitions("/DGOOGLE_GLOG_DLL_DECL=")
set(CMAKE_C_FLAGS_DEBUG   "${CMAKE_C_FLAGS_DEBUG} /bigobj /MTd")
set(CMAKE_C_FLAGS_RELEASE  "${CMAKE_C_FLAGS_RELEASE} /bigobj /MT")
set(CMAKE_CXX_FLAGS_DEBUG  "${CMAKE_CXX_FLAGS_DEBUG} /bigobj /MTd")
set(CMAKE_CXX_FLAGS_RELEASE   "${CMAKE_CXX_FLAGS_RELEASE} /bigobj /MT")

add_executable(ppdet_base ${SRCS})
target_link_libraries(ppdet_base PRIVATE paddle_inference.lib libyaml-cppmt.lib opencv_world346.lib glog.lib)
